definitions:
  domain.Movie:
    properties:
      cast:
        type: string
      director:
        type: string
      duration:
        type: integer
      genre:
        type: string
      id:
        type: integer
      posterURL:
        type: string
      rating:
        type: number
      releaseDate:
        type: string
      synopsis:
        type: string
      title:
        type: string
      userID:
        type: integer
    type: object
  domain.User:
    properties:
      disableDate:
        type: string
      email:
        type: string
      id:
        type: integer
      movies:
        items:
          $ref: '#/definitions/domain.Movie'
        type: array
      name:
        type: string
      password:
        type: string
      registerDate:
        type: string
    type: object
  httpadapter.HttpMovie:
    properties:
      cast:
        maxLength: 200
        type: string
      director:
        maxLength: 50
        type: string
      duration:
        minimum: 0
        type: integer
      genre:
        maxLength: 50
        type: string
      id:
        type: integer
      poster_url:
        type: string
      rating:
        maximum: 10
        minimum: 0
        type: number
      release_date:
        type: string
      synopsis:
        maxLength: 500
        type: string
      title:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - title
    type: object
  httpadapter.HttpUser:
    properties:
      email:
        type: string
      name:
        maxLength: 20
        minLength: 5
        type: string
      password:
        maxLength: 40
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple API for managing a movie collection.
  title: Movie Collection API
  version: "1.0"
paths:
  /movies:
    get:
      consumes:
      - application/json
      description: List all movies with optional filters
      parameters:
      - description: Filter by movie title
        in: query
        name: title
        type: string
      - description: Filter by movie director
        in: query
        name: director
        type: string
      - description: Filter by movie genre
        in: query
        name: genre
        type: string
      - description: Filter by movie cast
        in: query
        name: cast
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpadapter.HttpMovie'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List movies
      tags:
      - Movies
    post:
      consumes:
      - application/json
      description: Create a new movie in the collection
      parameters:
      - description: Movie object
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/httpadapter.HttpMovie'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/httpadapter.HttpMovie'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new movie
      tags:
      - Movies
  /movies/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific movie by its ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a movie
      tags:
      - Movies
    get:
      consumes:
      - application/json
      description: Get details of a specific movie by its ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpadapter.HttpMovie'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a movie by ID
      tags:
      - Movies
    put:
      consumes:
      - application/json
      description: Update details of a specific movie by its ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated movie object
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/httpadapter.HttpMovie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpadapter.HttpMovie'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a movie
      tags:
      - Movies
  /user:
    get:
      consumes:
      - application/json
      description: List all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/httpadapter.HttpUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
